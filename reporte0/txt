// Ejecutar una vez que el documento esté listo
        document.addEventListener('DOMContentLoaded', function () {
            // Referencias a los elementos donde se mostrará la cantidad de coincidencias y minutos
            var countDisplay = document.getElementById("count_display");
            var totalMinutesDisplay = document.getElementById("total_minutes_display");
            var avgMinutesDisplay = document.getElementById("avg_minutes_display");
            var options_org = document.getElementById("options_org");

            options_org.addEventListener("change", function (e) {
                e.preventDefault(); // Evitar el comportamiento por defecto si es necesario
                var selectedValue = options_org.value.toLowerCase(); // Obtener el valor seleccionado y pasarlo a minúsculas
                console.log(selectedValue); // Mostrar el valor en la consola

                // Obtener todas las filas de la tabla
                var tableBody = document.getElementById("table_body");
                var rows = tableBody.getElementsByTagName("tr");
                var matchCount = 0; // Inicializar el conteo de coincidencias
                var totalMinutes = 0; // Para almacenar la suma total de minutos

                // Iterar a través de cada fila
                for (var i = 0; i < rows.length; i++) {
                    var row = rows[i];

                    // Obtener los valores de las columnas 'razón social' y 'correo'
                    var razonSocial = row.querySelector('.razon-social').textContent.toLowerCase();
                    var correo = row.querySelector('.correo') ? row.querySelector('.correo').textContent.toLowerCase() : ''; // Asegurarse de que existe

                    // Verificar si el valor seleccionado coincide con 'razón social' o 'correo'
                    if (razonSocial.includes(selectedValue) || correo.includes(selectedValue) || selectedValue === "") {
                        row.style.display = ""; // Mostrar la fila
                        matchCount++; // Incrementar el conteo de coincidencias

                        // Obtener las fechas de creación y cierre
                        var fechaCreacion = row.querySelector('.fecha-creacion').textContent;
                        var fechaCierre = row.querySelector('.fecha-cierre').textContent;

                        // Convertir las fechas a objetos Date
                        var dateCreacion = new Date(fechaCreacion.replace(" ", "T"));
                        var dateCierre = new Date(fechaCierre.replace(" ", "T"));

                        // Calcular la diferencia en milisegundos
                        var diferenciaMilisegundos = dateCierre - dateCreacion;

                        // Convertir la diferencia a minutos
                        var diferenciaMinutos = Math.floor(diferenciaMilisegundos / (1000 * 60));

                        // Mostrar la diferencia en la celda correspondiente
                        row.querySelector('.diferencia-minutos').textContent = diferenciaMinutos;

                        // Sumar la diferencia de minutos al total
                        totalMinutes += diferenciaMinutos;
                    } else {
                        row.style.display = "none"; // Ocultar la fila si no hay coincidencia
                    }
                }

                // Mostrar la cantidad de filas coincidentes (tickets filtrados)
                countDisplay.textContent = "Cantidad de coincidencias: " + matchCount;

                // Mostrar la suma total de minutos
                totalMinutesDisplay.textContent = "Total de minutos de atención: " + totalMinutes;

                // Calcular y mostrar el promedio de minutos si hay coincidencias
                if (matchCount > 0) {
                    var avgMinutes = totalMinutes / matchCount;
                    avgMinutesDisplay.textContent = "Promedio de minutos: " + avgMinutes.toFixed(2);
                } else {
                    avgMinutesDisplay.textContent = "No hay coincidencias.";
                }
            });
        });

        <?php
require_once 'conexionDB/conexion.php';
$db = new db();
$tickets = $db->listarAll();
?>
<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reportes</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>

<body class="bg-gray-100">
    <div class="flex pt-4">
        <div class="flex h-[200px]">
            <div class="mx-4 bg-white p-6 rounded-lg shadow-lg w-96">
                <form id="" action="" class="">
                    <label for="options" class="mb-4 block text-lg font-medium text-gray-700 mb-4">Selecciona una opción: 
                        <a href="reporte.php" class="rounded-lg p-4 border">subir excel</a>
                    </label>
                    <select name="options" id="options_org" class="mt-2 w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500">
                        <option value="">Seleccione una opción</option>
                        <option value="protecta">PROTECTA</option>
                        <option value="gerencia">GERENCIA</option>
                        <option value="jjc">JJC</option>
                        <option value="sonda">SONDA</option>
                        <option value="jockey">JOCKEY</option>
                        <option value="consorcio">CONSORCIO</option>
                    </select>
                </form>
                <div class="flex gap-4">
                    <select name="filter_mes" id="filter_mes" class="mt-2 w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500">
                        <option value="" disabled selected>Seleccione un mes</option>
                        <!-- Meses -->
                    </select>

                    <select name="filter_año" id="filter_año" class="mt-2 w-full p-3 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500">
                        <option value="" disabled selected>Seleccione un año</option>
                        <!-- Años -->
                    </select>
                </div>
            </div>
        </div>

        <div class="w-[300px] bg-white shadow-lg py-8 rounded px-4">
            <div id="cantidad" class="mb-2"></div>
            <div id="count_display" class="mb-2"></div>
            <div id="total_minutes_display" class="mb-2"></div>
            <div id="avg_minutes_display" class="mb-2"></div>
            <div id="most_frequent_email_display" class="mt-2"></div>
        </div>
    </div>

    <div class="flex justify-center mx-4 mb-8">
        <div class="overflow-y-auto max-h-[400px]"> <!-- Contenedor para scroll -->
            <table id="ticketsTable" class="min-w-full bg-white p-6 rounded-xl shadow-lg mt-4 border border-gray-300">
                <thead>
                    <tr class="bg-gray-200 text-gray-700 uppercase text-sm leading-normal">
                        <th class="py-3 px-6 text-left">Nº</th>
                        <th class="py-3 px-6 text-left">Fecha Creación</th>
                        <th class="py-3 px-6 text-left">Fecha Cierre</th>
                        <th class="py-3 px-6 text-left">Diferencia (minutos)</th>
                        <th class="py-3 px-6 text-left">Creado Por</th>
                        <th class="py-3 px-6 text-left">Correo Cliente</th>
                        <th class="py-3 px-6 text-left">Asignado Usuario</th>
                        <th class="py-3 px-6 text-left">Razón Social</th>
                    </tr>
                </thead>
                <tbody id="table_body" class="text-gray-600 text-sm font-light">
                <?php foreach ($tickets as $ticket): ?>
                    <tr class="border-b border-gray-200 hover:bg-gray-100" data-razon="<?= htmlspecialchars($ticket['razon_social']); ?>">
                        <td class="py-2 px-6"><?= htmlspecialchars($ticket['numero_ticket']); ?></td>
                        <td class="py-2 px-6 fecha-creacion"><?= htmlspecialchars($ticket['fecha_creacion']); ?></td>
                        <td class="py-2 px-6 fecha-cierre"><?= htmlspecialchars($ticket['fecha_cierre']); ?></td>
                        <td class="py-2 px-6 diferencia-minutos"></td>
                        <td class="py-2 px-6"><?= htmlspecialchars($ticket['creado_por']); ?></td>
                        <td class="py-2 px-6 correo_cliente"><?= isset($ticket['correo_cliente']) ? htmlspecialchars($ticket['correo_cliente']) : 'No disponible' ?></td>
                        <td class="py-2 px-6"><?= htmlspecialchars(substr($ticket['asignado_usuario'], 0, 20)); ?></td>
                        <td class="py-2 px-6 razon_social"><?= htmlspecialchars($ticket['razon_social']); ?></td>
                    </tr>
                <?php endforeach; ?>
                </tbody>
            </table>
        </div>
    </div>

    <script>
        document.addEventListener("DOMContentLoaded", function() {
            const optionsOrg = document.getElementById("options_org");
            const cantidadDisplay = document.getElementById("cantidad");
            const rows = document.querySelectorAll("#ticketsTable tbody tr");

            // Calcular la diferencia en minutos y mostrarla en la tabla
            rows.forEach(row => {
                const fechaCreacion = row.querySelector('.fecha-creacion').textContent.trim();
                const fechaCierre = row.querySelector('.fecha-cierre').textContent.trim();
                
                const diffInMinutes = calculateMinutesDifference(fechaCreacion, fechaCierre);
                row.querySelector('.diferencia-minutos').textContent = diffInMinutes;
            });

            optionsOrg.addEventListener("change", function() {
                const selectedOption = this.value.toLowerCase();
                let visibleCount = 0;

                rows.forEach(row => {
                    const razon = row.getAttribute("data-razon").toLowerCase();
                    if (selectedOption === "" || razon.includes(selectedOption)) {
                        row.style.display = "";
                        visibleCount++;
                    } else {
                        row.style.display = "none";
                    }
                });

                cantidadDisplay.textContent = `Tickets encontrados: ${visibleCount}`;
            });
        });

        function calculateMinutesDifference(fechaCreacion, fechaCierre) {
            const start = new Date(fechaCreacion);
            const end = new Date(fechaCierre);
            const diff = (end - start) / (1000 * 60); // Diferencia en minutos
            return diff;
        }
    </script>
</body>

</html>
        